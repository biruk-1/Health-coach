import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ActivityIndicator,
  SafeAreaView,
  TouchableOpacity,
  StatusBar,
  Platform,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useRouter } from 'expo-router';

// Super simple component to fix hook errors
function CoachesScreen() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  
  // Simple effect to simulate initialization
  useEffect(() => {
    // Simulate loading
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 1000);
    
    return () => clearTimeout(timer);
  }, []);

  // Loading state
  if (isLoading) {
    return (
      <SafeAreaView style={styles.loadingContainer}>
        <ActivityIndicator size="large" color="#6366f1" />
        <Text style={styles.loadingText}>Loading coaches...</Text>
      </SafeAreaView>
    );
  }

  // Main render
  return (
    <SafeAreaView style={styles.container}>
      <StatusBar backgroundColor="#4f46e5" barStyle="light-content" />
      
      <View style={styles.header}>
        <Text style={styles.headerTitle}>Health Coaches</Text>
        <Text style={styles.headerSubtitle}>Find your perfect wellness match</Text>
      </View>
      
      <View style={styles.content}>
        <Text style={styles.contentText}>
          Your coaches will appear here. This is a simplified version to fix the hooks error.
        </Text>
        
        <TouchableOpacity 
          style={styles.refreshButton} 
          onPress={() => setIsLoading(true)}
        >
          <Text style={styles.refreshButtonText}>Refresh</Text>
        </TouchableOpacity>
      </View>
      
      {/* Floating button */}
      <TouchableOpacity 
        style={styles.floatingButton}
        onPress={() => router.push('/cosmic-ai-chat')}
      >
        <View style={styles.floatingButtonInner}>
          <Ionicons name="sparkles" size={24} color="#ffffff" />
          <Text style={styles.floatingButtonText}>Ask Coach AI</Text>
        </View>
      </TouchableOpacity>
    </SafeAreaView>
  );
}

// Export as a simple component (no memo for now to simplify)
export default CoachesScreen;

// Simple clean styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
  },
  loadingText: {
    marginTop: 12,
    fontSize: 16,
    color: '#4b5563',
  },
  header: {
    backgroundColor: '#6366f1',
    padding: 16,
    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight + 16 : 16,
    paddingBottom: 24,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  headerSubtitle: {
    fontSize: 16,
    color: 'rgba(255, 255, 255, 0.8)',
    marginTop: 4,
  },
  content: {
    flex: 1,
    padding: 20,
    alignItems: 'center',
    justifyContent: 'center',
  },
  contentText: {
    fontSize: 16,
    color: '#374151',
    textAlign: 'center',
    marginBottom: 24,
  },
  refreshButton: {
    backgroundColor: '#6366f1',
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 8,
  },
  refreshButtonText: {
    color: '#FFFFFF',
    fontWeight: '600',
    fontSize: 16,
  },
  floatingButton: {
    position: 'absolute',
    bottom: 24,
    right: 24,
    backgroundColor: '#6366f1',
    paddingHorizontal: 20,
    paddingVertical: 12,
    borderRadius: 30,
    elevation: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
  },
  floatingButtonInner: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  floatingButtonText: {
    color: '#FFFFFF',
    fontWeight: '600',
    fontSize: 16,
    marginLeft: 8,
  },
});